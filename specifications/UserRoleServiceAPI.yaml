swagger: '2.0'
info:
  description: Service for user and role management
  version: 1.0.0
  title: User Service
host: userRoleService.de
basePath: /v2
schemes:
  - https
  - http
paths:
  /users:
    get:
      summary: Get users
      operationId: getUsers
      produces:
        - application/json
      parameters:
        - in: query
          name: username
          type: string
        - in: query
          name: firstname
          type: string
        - in: query
          name: lastname
          type: string
        - in: query
          name: roleId
          type: integer
          format: int64
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: bad request
        '500':
          description: error
    post:
      summary: Create user
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: success
        '409':
          description: conflict
        '500':
          description: error
  '/users/{id}':
    get:
      summary: Get user by Id
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/User'
        '404':
          description: not found
        '500':
          description: error
    put:
      summary: Set user by Id
      operationId: setUserById
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: success
        '404':
         description: not found
        '500':
          description: error
    delete:
      summary: Delete user with Id
      operationId: deleteUser
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '404':
          description: not found
        '500':
          description: error
  /roles:
    get:
      summary: Get roles
      operationId: getRoles
      produces:
        - application/json
      parameters:
        - in: query
          name: typ
          type: string
        - in: query
          name: level
          type: integer
          format: int32
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        '400':
          description: bad request
        '500':
          description: error
    post:
      summary: Create role
      operationId: createRole
      produces:
        - application/json
      parameters:
        - in: body
          name: role
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: success
        '409':
          description: conflict
        '500':
          description: error
  '/roles/{id}':
    get:
      summary: Get role by Id
      operationId: getRoleById
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/Role'
        '404':
          description: not found
        '500':
          description: error
    put:
      summary: Set role by Id
      operationId: setRoleById
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
        - in: body
          name: role
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: success
        '404':
          description: not found
        '500':
          description: error
    delete:
      summary: Delete role with Id
      operationId: deleteRole
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '404':
          description: not found
        '500':
          description: error
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      roleID:
        type: integer
        format: int32
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      typ:
        type: string
      level:
        type: integer
        format: int32

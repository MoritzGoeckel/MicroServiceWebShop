swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Product Service"
  contact:
    email: "peter.krieger@posteo.de"
host: "localhost:8080"
basePath: "/"
tags:
- name: "products"
  description: ""
paths:
  /products:
    post:
      tags:
      - "products"
      summary: "Adds a new product"
      description: ""
      operationId: "add product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "header"
        description: "The name of the product"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid input"
        405:
          description: "Product already exists"
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Product"
    get:
      tags:
      - "products"
      summary: "Queries products. If no name is provided all products will be returned"
      description: ""
      operationId: "query products"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "header"
        description: "The name of the product"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
  
  /products/{id}:
    delete:
      tags:
      - "products"
      summary: "Deletes a product"
      description: ""
      operationId: "delete product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the to be deleted product"
        required: true
        type: "integer"
        format: "int64"
      responses:
        405:
          description: "Product does not exist"
        200:
          description: "Successful operation"
    get:
      tags:
      - "products"
      summary: "Retrieves a product"
      description: ""
      operationId: "get product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the to be retrieved product"
        required: true
        type: "integer"
        format: "int64"
      responses:
        405:
          description: "Product does not exist"
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Product"

definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Product"
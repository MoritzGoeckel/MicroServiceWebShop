/*
 * Sanity Service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bhb127@outlook.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hska.microServiceWebShop.api;

import hska.microServiceWebShop.ApiException;
import hska.microServiceWebShop.models.Category;
import hska.microServiceWebShop.models.CategoryQuery;
import hska.microServiceWebShop.models.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CategoriesApi
 */
@Ignore
public class CategoriesApiTest {

    private final CategoriesApi api = new CategoriesApi();

    @Test
    public void addAndDeleteCategoryTest() throws ApiException {
        try {
            Category name = new Category();
            name.setName("cat1");

            // Add cat1
            System.out.println("Add cat1");
            Category response = api.addCategory(name);
            System.out.println(response.toString());
            assert response.getName().equalsIgnoreCase("cat1");
            assert response.getId() != null;

            // Delete cat1
            System.out.println("Delete cat1");
            Long id = response.getId();
            api.deleteCategory(id);
        }catch (ApiException e){
            System.err.println(e.getCode());
            System.err.println(e.getMessage());
            System.err.println(e.getResponseBody());
            System.err.println(e.getStackTrace());
            assert false;
        }

    }

    @Test
    public void addAndQueryCategoryTest() throws ApiException {
        try {
            Category name = new Category();
            name.setName("cat2");

            // Add cat2
            System.out.println("Add cat2");
            Category response = api.addCategory(name);
            System.out.println(response.toString());
            assert response.getName().equalsIgnoreCase("cat2");
            assert response.getId() != null;

            // get cat2 by id
            System.out.println("get cat2 by id");
            Long id = response.getId();
            Category response2 = api.getCategory(id);
            System.out.println(response.toString());
            assert response2.getName().equalsIgnoreCase("cat2");

            name = new Category();
            name.setName("cat3");

            // add cat3
            System.out.println("add cat3");
            response = api.addCategory(name);
            System.out.println(response.toString());
            assert response.getName().equalsIgnoreCase("cat3");
            assert response.getId() != null;

            // query for cat3
            System.out.println("query for cat3");
            CategoryQuery query = new CategoryQuery();
            query.setText("cat3");
            List<Category> responses = api.queryCategories(query);
            for (Category c: responses) {
                System.out.println(c.toString());
                assert response.getName().contains("cat3");
            }

            // query for all
            System.out.println("query for all");
            query = new CategoryQuery();
            responses = api.queryCategories(query);
            for (Category c: responses) {
                System.out.println(c.toString());

                // Delete catX
                System.out.println("Delete " + c.getName());
                id = c.getId();
                api.deleteCategory(id);
            }

            // query for all
            System.out.println("query for all");
            query = new CategoryQuery();
            responses = api.queryCategories(query);
            assert responses.size() == 0;


        }catch (ApiException e){
            System.err.println(e.getCode());
            System.err.println(e.getMessage());
            System.err.println(e.getResponseBody());
            System.err.println(e.getStackTrace());
            assert false;
        }

    }

    @Test
    public void addTwoTimesCategoryTest() throws ApiException {
        try {
            Category name = new Category();
            name.setName("cat4");

            // Add cat4
            System.out.println("Add cat4");
            Category response = api.addCategory(name);
            System.out.println(response.toString());
            assert response.getName().equalsIgnoreCase("cat4");
            assert response.getId() != null;

            try {
                // Add cat4
                System.out.println("Add cat4");
                response = api.addCategory(name);
                assert false;
            }catch (ApiException e){
                System.out.println(e.getCode());
                System.out.println(e.getMessage());
                System.out.println(e.getResponseBody());
                System.out.println(e.getStackTrace());
            }

            // Delete cat4
            System.out.println("Delete cat4");
            Long id = response.getId();
            api.deleteCategory(id);
        }catch (ApiException e){
            System.err.println(e.getCode());
            System.err.println(e.getMessage());
            System.err.println(e.getResponseBody());
            System.err.println(e.getStackTrace());
            assert false;
        }

    }
    
}
